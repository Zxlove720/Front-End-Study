// JavaScript不支持函数重载，个人觉得可以理解因为Java的重载是
// 根据形参列表的不同类型，不同长度，不同顺序（方法签名）实现的，
// 归根到底是依赖于形参列表的类型，而JavaScript中根本不需要定义形参类型
// 当然这是比较简单的理解，底层设计远比我的理解更加复杂。

// 虽然JavaScript不支持函数重载，但是可以写多个重名函数。
// 但是并非可以使用这些重名函数，其规则和CSS一样：后定义的函数会覆盖掉先定义的函数！
function fn() {
  console.log("第一个函数")
}

function fn() {
  console.log("第二个函数")
}
fn() // 调用函数，控制台输出"第二个函数"
// 是因为第二个函数比第一个函数后写，所以说才会执行第二个函数；并不是因为调用时距离第二个函数更近